KD SOAP 1.x requires a Qt version >= 4.6 with Network and XML support enabled.

The same source code compiles with either Qt 4 or Qt 5.

If you are using sources from github (via a git clone or a generated zip file), jump
to section 1-bis). Commercial users, start at section 1).

1) From the top directory of your KD SOAP installation
   run the "configure" scripts.

   On Windows use depending on the kind of build one of the following;
     configure.bat -shared -debug
     configure.bat -shared -release
     configure.bat -static -debug
     configure.bat -static -release

   On Unix use depending on the kind of build one of the following;
     ./configure.sh -shared -debug
     ./configure.sh -shared -release
     ./configure.sh -static -debug
     ./configure.sh -static -release

   To define the install-location use for example;
     configure.bat -shared -debug -prefix c:/kdsoap
     ./configure.sh -shared -debug -prefix /opt/kdsoap

   If this succeeded, jump to step 2.

1-bis) If you are building KD SOAP from a github clone rather than a release tarball,
   the configure.bat/configure.sh script doesn't exist (it's generated at release time),
   you need to do this instead:

   First, a working Python (version2) is required and must be found in your
   execute path.  Either a 32-bit or 64-bit version of Python is fine, but run
   python --version to make sure it is found and is python2 before continuing.

   Now run autogen.py to create the configure tool.

   On Windows:
     c:\python27\python2 autogen.py [options]
   On Linux:
     python2 autogen.py [options]

   Pass the same options to autogen.py as you would for configure.sh/configure.bat
   as shown above in step 1).

   After running autogen.py, a configure.sh/configure.bat script will exist and
   you can use that to re-configure later, as needed.  Then you can continue on
   to the platform-specific setup instructions in step 2, 3 or 4.

2) Unix

   set your LD_LIBRARY_PATH to point to your KD SOAP installation lib directory.

   If you do not have LD_LIBRARY_PATH set already, then in your terminal run:
    % LD_LIBRARY_PATH=/path/to/kdsoap/lib:$LD_LIBRARY_PATH
    % export LD_LIBRARY_PATH

   The above must be added into your .bashrc or similar to remain. It may also of course
   be run from a shell just before building software using KD SOAP, but in this case your
   settings will only be available for this shell.

   If you want to install the libraries under the "lib64" folder then
   set the QMAKE_ARGS environment variable to "LIB_SUFFIX=64" like so:
    % QMAKE_ARGS="LIB_SUFFIX=64"
    % export QMAKE_ARGS

3) MacOS

   Proceed as described above, but using DYLD_LIBRARY_PATH instead of LD_LIBRARY_PATH

4) Windows

   For running executables, add the path to the KD Soap dll (kdsoap\bin) into your PATH.
   eg. set PATH=\path\to\kdsoap\bin;%PATH%

   For development, add the path to the KD Soap lib (kdsoaplib) into your LIB environment.
   eg. set LIB=\path\to\kdsoap\lib;%LIB%

5) Build everything by typing:

   From your top-level KD SOAP directory run:

   % make    # Unix, Mac
   % nmake   # Windows

6) (optionally:) Install KD SOAP:

   From your top-level KD SOAP directory run:

   % make install   # Unix, Mac
   % nmake install  # Windows

   This will copy the necessary files into the sub-directories of your installation path:
   For Unix/Linux, Mac this is /usr/local/KDAB/KDSoap-VERSION/
   For Windows this is: C:\KDAB\KDSoap-VERSION\

7) Have a look at the examples applications. They will get you started with KD SOAP.
